swagger: '2.0'
info:
  title: Todo API
  version: 0.0.1
# host: 127.0.0.1:8080
basePath: /todo

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /tasks:
    get:
      summary: 'Retrieve all stored tasks'
      tags:
        - 'Todo'
      responses:
        '200':
          description: 'ok'
          schema:
            type: array
            items:
              $ref: '#/definitions/TaskResponse'
        '500':
          description: 'internal error'
          schema:
            $ref: '#/definitions/APIError'
    post:
      parameters:
        - in: body
          name: body
          required: true
          description: The task to store.
          schema:
            $ref: '#/definitions/TaskCreate'
      summary: 'Store a task'
      tags:
        - 'Todo'
      responses:
        '201':
          description: 'created'
        '500':
          description: 'internal error'
          schema:
            $ref: '#/definitions/APIError'
  
  /tasks/{id}:
    parameters:
      - name: id
        type: integer
        in: path
        required: true
    patch:
      summary: 'Partially update a task'
      tags:
        - 'Todo'
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          description: The updated fields.
          schema:
            $ref: '#/definitions/TaskUpdate'
      responses:
        '200':
          description: 'ok'
          schema:
            $ref: '#/definitions/TaskResponse'
        '404':
          description: 'not found'
          schema:
            $ref: '#/definitions/APIError'
        '500':
          description: 'internal error'
          schema:
            $ref: '#/definitions/APIError'
    delete:
      summary: 'Delete a task'
      tags:
        - 'Todo'
      responses:
        '204':
          description: 'ok'
        '500':
          description: 'internal error'
          schema:
            $ref: '#/definitions/APIError'
  
definitions:
  APIError:
    type: object
    properties:
      message:
        type: string

  TaskCreate:
    type: 'object'
    required:
      - title
    properties:
      title:
        type: string
      detail:
        type: string
      priority:
        type: string
      dueAt:
        type: string
        format: date-time

  TaskUpdate:
    type: 'object'
    properties:
      completed:
        type: boolean
  
  TaskResponse:
    type: 'object'
    properties:
      id:
        type: integer
      title:
        type: string
      detail:
        type: string
      priority:
        type: string
      completed:
        type: boolean
      dueAt:
        type: string
        format: date-time
      createdAt:
        type: string
        format: date-time
